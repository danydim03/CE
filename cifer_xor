#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdint.h>

// Funzione per leggere una stringa dall'input
void leggi_stringa(char *stringa, int N) {
    if (!fgets(stringa, N, stdin)) {
        printf("Errore nella lettura della stringa\n");
        exit(EXIT_FAILURE);
    }
}

// Funzione per contare i bit impostati a 1 nella chiave
uint8_t conta_bit(const char *stringa, int len) {
    uint8_t count = 0;
    for (int i = 0; i < len; i++) {
        for (int j = 0; j < 8; j++) {
            if (stringa[i] & (1 << j)) {
                count++;
            }
        }
    }
    return count;
}

// Funzione per cifrare/decifrare una stringa usando XOR con la chiave
void cifratura(uint8_t chiave, const char *input, char *output) {
    int len = strlen(input);
    for (int i = 0; i < len; i++) {
        output[i] = input[i] ^ chiave;
    }
    output[len] = '\0';
}

int main(int argc, char *argv[]) {
    if (argc < 2) {
        printf("Errore: non ci sono abbastanza argomenti\n");
        return EXIT_FAILURE;
    }

    // Calcola la lunghezza della chiave e il numero di bit impostati a 1
    int len = strlen(argv[1]);
    uint8_t chiave = conta_bit(argv[1], len);
    printf("Il numero di bit a 1 è: %d\n", chiave);

    // Leggi la stringa da cifrare/decifrare
    char input[100];
    printf("Inserisci la frase da cifrare/decifrare: ");
    leggi_stringa(input, sizeof(input));

    // Rimuovi il carattere di newline dalla fine della stringa
    int input_len = strlen(input);
    if (input_len > 0 && input[input_len - 1] == '\n') {
        input[input_len - 1] = '\0';
    }

    // Esegui la cifratura/decifratura
    char output[100];
    cifratura(chiave, input, output);
    printf("La nuova stringa è: %s\n", output);

    return 0;
}
