#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int leggi_stringa(char *stringa, int N )
{
	
if (!fgets(string,N, stdio)
	{
	printf("errore");
	exit(EXIT_FAILURE);
	}	

return 1;
}



int conta_bit(char *string, int len)
{
int count =0; 
int i=0; 
while(string[i]!= '\0' && string[i]!= '\n' )//codice portabile
	{	
	for(int j=0, j < 8, j++)
	{
		if(argv[i] & 1 << j )
		{	
		count ++; 
		}
	}

	}
return count; 
}


int main (int argc, char *argv[])


{
if(argc < 2)
{
printf("errore non ci sono abbastanza argomenti")
exit(EXIT_FAILURE);
}
int len= strlen(arg[1]);
leggi_stringa(argv[1], len);




}

ubuntu@ubuntu:~/Desktop$ cat esame1.c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int leggi_stringa(char *stringa, int N )
{
	
if (!fgets(string,N, stdin)
	{
	printf("errore");
	exit(EXIT_FAILURE);
	}	

return 1;
}



int conta_bit(char *string, int len)
{
uint8_t count =0; 
int i=0; 
while(i< len && string[i]!= '\0' && string[i]!= '\n' )//codice portabile
	{	
	for(int j=0, j < 8, j++)
	{
		if(argv[i] & 1 << j )
		{	
		count ++; 
		}
	}
	i++;

	}
return count; 
}

char *cifratura(uint8_t chiave, char *input)
{
	int len=(int) strlen(input) ; 
	if(len>0 && input[len -1]== '\n')
	{
	input[len - 1]= '\0'
	}
	int i =0; 
	char *new_string= (char*)malloc(len * sizeof(char));

	while(i < len && input[i]!= '\0' )
	{
	new_string[i]= input[i] ^ chiave;
	
	
	}

return new_string;




}


int main (int argc, char *argv[])


{
if(argc < 2)
{
printf("errore non ci sono abbastanza argomenti")
exit(EXIT_FAILURE);
}
int len= strlen(arg[1]);
leggi_stringa(argv[1], len);
uint8_t chiave= conta_bit(argv[1], len);
printf("Il numero di bit a 1 è: %d\n", bit_count);
char input[100];
leggi_stringa(input, 100)
char res[100];
cifratura(chiave,input)= res; 
printf("la nuova stringa è: ", res)

return 0; 
}
